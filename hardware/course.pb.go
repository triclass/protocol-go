// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: hardware/course.proto

package hardware

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 会议协议
type Course struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//	*Course_Start
	//	*Course_Terminate
	//	*Course_Video
	//	*Course_Microphone
	//	*Course_Audio
	Action isCourse_Action `protobuf_oneof:"action"`
}

func (x *Course) Reset() {
	*x = Course{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hardware_course_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Course) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Course) ProtoMessage() {}

func (x *Course) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_course_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Course.ProtoReflect.Descriptor instead.
func (*Course) Descriptor() ([]byte, []int) {
	return file_hardware_course_proto_rawDescGZIP(), []int{0}
}

func (m *Course) GetAction() isCourse_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *Course) GetStart() *Start {
	if x, ok := x.GetAction().(*Course_Start); ok {
		return x.Start
	}
	return nil
}

func (x *Course) GetTerminate() *Terminate {
	if x, ok := x.GetAction().(*Course_Terminate); ok {
		return x.Terminate
	}
	return nil
}

func (x *Course) GetVideo() *Video {
	if x, ok := x.GetAction().(*Course_Video); ok {
		return x.Video
	}
	return nil
}

func (x *Course) GetMicrophone() *Microphone {
	if x, ok := x.GetAction().(*Course_Microphone); ok {
		return x.Microphone
	}
	return nil
}

func (x *Course) GetAudio() *Audio {
	if x, ok := x.GetAction().(*Course_Audio); ok {
		return x.Audio
	}
	return nil
}

type isCourse_Action interface {
	isCourse_Action()
}

type Course_Start struct {
	// 开始会议
	// 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
	Start *Start `protobuf:"bytes,1,opt,name=start,proto3,oneof"`
}

type Course_Terminate struct {
	// 结束会议
	Terminate *Terminate `protobuf:"bytes,2,opt,name=terminate,proto3,oneof"`
}

type Course_Video struct {
	// 视频
	Video *Video `protobuf:"bytes,3,opt,name=video,proto3,oneof"`
}

type Course_Microphone struct {
	// 麦克风
	Microphone *Microphone `protobuf:"bytes,4,opt,name=microphone,proto3,oneof"`
}

type Course_Audio struct {
	// 音频
	Audio *Audio `protobuf:"bytes,5,opt,name=audio,proto3,oneof"`
}

func (*Course_Start) isCourse_Action() {}

func (*Course_Terminate) isCourse_Action() {}

func (*Course_Video) isCourse_Action() {}

func (*Course_Microphone) isCourse_Action() {}

func (*Course_Audio) isCourse_Action() {}

var File_hardware_course_proto protoreflect.FileDescriptor

var file_hardware_course_proto_rawDesc = []byte{
	0x0a, 0x15, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x1a, 0x1b, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2f,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x3c, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12,
	0x30, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2e,
	0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x72, 0x69, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x13, 0x2e, 0x2f, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x3b, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hardware_course_proto_rawDescOnce sync.Once
	file_hardware_course_proto_rawDescData = file_hardware_course_proto_rawDesc
)

func file_hardware_course_proto_rawDescGZIP() []byte {
	file_hardware_course_proto_rawDescOnce.Do(func() {
		file_hardware_course_proto_rawDescData = protoimpl.X.CompressGZIP(file_hardware_course_proto_rawDescData)
	})
	return file_hardware_course_proto_rawDescData
}

var file_hardware_course_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_hardware_course_proto_goTypes = []interface{}{
	(*Course)(nil),     // 0: triclass.hardware.Course
	(*Start)(nil),      // 1: triclass.hardware.Start
	(*Terminate)(nil),  // 2: triclass.hardware.Terminate
	(*Video)(nil),      // 3: triclass.hardware.Video
	(*Microphone)(nil), // 4: triclass.hardware.Microphone
	(*Audio)(nil),      // 5: triclass.hardware.Audio
}
var file_hardware_course_proto_depIdxs = []int32{
	1, // 0: triclass.hardware.Course.start:type_name -> triclass.hardware.Start
	2, // 1: triclass.hardware.Course.terminate:type_name -> triclass.hardware.Terminate
	3, // 2: triclass.hardware.Course.video:type_name -> triclass.hardware.Video
	4, // 3: triclass.hardware.Course.microphone:type_name -> triclass.hardware.Microphone
	5, // 4: triclass.hardware.Course.audio:type_name -> triclass.hardware.Audio
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_hardware_course_proto_init() }
func file_hardware_course_proto_init() {
	if File_hardware_course_proto != nil {
		return
	}
	file_hardware_course_start_proto_init()
	file_hardware_course_terminate_proto_init()
	file_hardware_course_video_proto_init()
	file_hardware_course_microphone_proto_init()
	file_hardware_course_audio_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hardware_course_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Course); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hardware_course_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Course_Start)(nil),
		(*Course_Terminate)(nil),
		(*Course_Video)(nil),
		(*Course_Microphone)(nil),
		(*Course_Audio)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hardware_course_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hardware_course_proto_goTypes,
		DependencyIndexes: file_hardware_course_proto_depIdxs,
		MessageInfos:      file_hardware_course_proto_msgTypes,
	}.Build()
	File_hardware_course_proto = out.File
	file_hardware_course_proto_rawDesc = nil
	file_hardware_course_proto_goTypes = nil
	file_hardware_course_proto_depIdxs = nil
}
